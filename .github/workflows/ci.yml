name: CI/CD - Backend Tests

permissions:
  contents: read
  actions: read
  checks: write

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json
            
      - name: Install backend dependencies
        run: npm ci
        working-directory: ./backend
        
      - name: Install frontend dependencies
        run: npm ci
        working-directory: ./frontend
        
      - name: Make scripts executable
        run: |
          chmod +x node_modules/.bin/* || true
        working-directory: ./backend
        
      - name: Start backend
        run: |
          npm run dev &
          echo $! > backend.pid
        working-directory: ./backend
        
      - name: Start frontend
        run: |
          npm start &
          echo $! > frontend.pid
        working-directory: ./frontend
        
      - name: Wait for services
        run: |
          echo "Waiting for services to start..."
          timeout 60 bash -c 'until curl -f http://localhost:3000/health > /dev/null 2>&1; do sleep 2; done' || echo "Backend health check timeout"
          timeout 60 bash -c 'until curl -f http://localhost:3001 > /dev/null 2>&1; do sleep 2; done' || echo "Frontend health check timeout"
          
      - name: Run unit tests
        run: npm run test:unit
        working-directory: ./backend
        
      - name: Run integration tests
        run: npm run test:integration
        working-directory: ./backend
        
      - name: Run e2e tests
        run: npm run test:e2e
        working-directory: ./backend
        
      - name: Cleanup
        if: always()
        run: |
          [ -f backend/backend.pid ] && kill $(cat backend/backend.pid) || true
          [ -f frontend/frontend.pid ] && kill $(cat frontend/frontend.pid) || true